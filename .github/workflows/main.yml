# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world test!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

# name: Test linux job
# on:
#   push:
#     branches:
#     - main

# jobs:
#   testJob:
#     name: Test
#     runs-on: ubuntu-latest
#     steps:
#       - id: set_var
#         run: |
#           content=`cat ./Location/comfort.json`
#           # the following lines are only required for multi line json
#           content="${content//'%'/'%25'}"
#           content="${content//$'\n'/'%0A'}"
#           content="${content//$'\r'/'%0D'}"
#           # end of optional handling for multi line json
#           echo "::set-output name=packageJson::$content"
#       - run: |
#           echo "${{fromJson(steps.set_var.outputs.test)}}"

    # - name: Trigger API Call
    #   run: | 
    #     curl --location --request GET '${{secrets.URL}}'

    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-2

    # - name: Deploy static site to S3 bucket
    #   #run: aws s3 sync ${{env.SOURCE_DIR}} s3://testspoofbucket--delete
    #   run: aws s3 sync . s3://testspoofbucket --delete
    # - name: test_loc
    #   run: |
    #     content=`cat ./Location/jsonconfig.json`
    #     content="${content//'%'/'%25'}"
    #     content="${content//$'\n'/'%0A'}"
    #     content="${content//$'\r'/'%0D'}"
    #     echo "::set-output name=testJson::$content"
    #   - run: |
    #       echo "${{fromJson(steps.test_loc.outputs.testJson).newlocation}}"


    